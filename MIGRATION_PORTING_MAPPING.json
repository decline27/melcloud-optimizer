{
  "generatedAt": "2025-08-23T00:00:00Z",
  "legacyFile": "api-old-version.js",
  "legacyExports": [
    "updateOptimizerSettings",
    "getDeviceList",
    "getRunHourlyOptimizer",
    "getThermalModelData",
    "getRunWeeklyCalibration",
    "getStartCronJobs",
    "getUpdateCronStatus",
    "getCheckCronStatus",
    "getCOPData",
    "getWeeklyAverageCOP",
    "getMelCloudStatus",
    "getTibberStatus",
    "runSystemHealthCheck",
    "getMemoryUsage",
    "runThermalDataCleanup",
    "__test"
  ],
  "tsFile": "src/api.ts",
  "tsExports": [
    "Api",
    "initializeServices",
    "updateOptimizerSettings",
    "getDeviceList",
    "getRunHourlyOptimizer",
    "getRunWeeklyCalibration",
    "runHourlyOptimizer",
    "runWeeklyCalibration",
    "getMemoryUsage",
    "getMelCloudStatus",
    "getTibberStatus",
    "runSystemHealthCheck",
    "getCOPData",
    "getWeeklyAverageCOP",
    "getCheckCronStatus",
    "getUpdateCronStatus",
    "getStartCronJobs",
    "getThermalModelData",
    "runThermalDataCleanup",
    "resetHotWaterPatterns",
    "clearHotWaterData",
    "runSystemHealthCheck",
    "__test"
  ],
  "mapping": {
    "updateOptimizerSettings": "updateOptimizerSettings (top-level) and Api.updateOptimizerSettings",
    "getDeviceList": "getDeviceList (top-level) and Api.getDeviceList",
    "getRunHourlyOptimizer": "getRunHourlyOptimizer (top-level) and Api.getRunHourlyOptimizer",
    "getThermalModelData": "getThermalModelData (top-level) and Api.getThermalModelData",
    "getRunWeeklyCalibration": "getRunWeeklyCalibration (top-level) and Api.getRunWeeklyCalibration",
    "getStartCronJobs": "getStartCronJobs (top-level) and Api.getStartCronJobs",
    "getUpdateCronStatus": "getUpdateCronStatus (top-level) and Api.getUpdateCronStatus",
    "getCheckCronStatus": "getCheckCronStatus (top-level) and Api.getCheckCronStatus",
    "getCOPData": "getCOPData (top-level) and Api.getCOPData",
    "getWeeklyAverageCOP": "getWeeklyAverageCOP (top-level) and Api.getWeeklyAverageCOP",
    "getMelCloudStatus": "getMelCloudStatus (top-level) and Api.getMelCloudStatus",
    "getTibberStatus": "getTibberStatus (top-level) and Api.getTibberStatus",
    "runSystemHealthCheck": "runSystemHealthCheck (top-level) and Api.runSystemHealthCheck",
    "getMemoryUsage": "getMemoryUsage (top-level) and Api.getMemoryUsage",
    "runThermalDataCleanup": "runThermalDataCleanup (top-level) and Api.runThermalDataCleanup",
    "__test": "__test helper object attached to module.exports in src/api.ts"
  },
  "notes": {
    "weeklyCalibrationThreshold": {
      "legacy": 24,
      "ts": 20,
      "action": "Decide whether to align thresholds; tests/integration may assume legacy threshold"
    },
    "globalFallbacks": "src/api.ts still falls back to globals for services; __test.setServices mirrors into globals for compatibility. Plan to remove globals after migrating callsites.",
    "returnShapes": "Some status endpoints use different shapes (connected vs success). Audit consumers before final delete of legacy file."
  }
}
