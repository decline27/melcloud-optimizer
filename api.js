console.log('üöÄ API.JS FILE LOADED - SDK v3 - TIMESTAMP:', new Date().toISOString());

module.exports = {
  async getDeviceList({ homey, query }) {
    console.log('üéØ getDeviceList CALLED - Settings page calling SDK v3 API');
    console.log('API: homey available:', !!homey);
    console.log('API: app available:', !!homey.app);
    console.log('API: query params:', query);
    
    try {
      // Import and call the TypeScript implementation
      const apiCore = require('./src/api-core');
      const result = await apiCore.getDeviceList({ homey });
      console.log('‚úÖ getDeviceList result:', result);
      return result;
    } catch (error) {
      console.error('‚ùå getDeviceList error:', error);
      return {
        success: false,
        error: error.message || 'Unknown error in getDeviceList'
      };
    }
  },
  
  async runHourlyOptimizer({ homey, query }) {
    console.log('üéØ runHourlyOptimizer CALLED - SDK v3');
    try {
      const apiCore = require('./src/api-core');
      const result = await apiCore.getRunHourlyOptimizer({ homey });
      console.log('‚úÖ runHourlyOptimizer result:', result);
      return result;
    } catch (error) {
      console.error('‚ùå runHourlyOptimizer error:', error);
      return { success: false, error: error.message || 'Unknown error in runHourlyOptimizer' };
    }
  },
  
  async runWeeklyCalibration({ homey, query }) {
    console.log('üéØ runWeeklyCalibration CALLED - SDK v3');
    try {
      const apiCore = require('./src/api-core');
      const result = await apiCore.getRunWeeklyCalibration({ homey });
      console.log('‚úÖ runWeeklyCalibration result:', result);
      return result;
    } catch (error) {
      console.error('‚ùå runWeeklyCalibration error:', error);
      return { success: false, error: error.message || 'Unknown error in runWeeklyCalibration' };
    }
  },
  
  async getCheckCronStatus({ homey, query }) {
    console.log('üéØ getCheckCronStatus CALLED - SDK v3');
    try {
      const apiCore = require('./src/api-core');
      const result = await apiCore.getCheckCronStatus({ homey });
      console.log('‚úÖ getCheckCronStatus result:', result);
      return result;
    } catch (error) {
      console.error('‚ùå getCheckCronStatus error:', error);
      return { success: false, error: error.message || 'Unknown error in getCheckCronStatus' };
    }
  },
  
  async getUpdateCronStatus({ homey, query }) {
    console.log('üéØ getUpdateCronStatus CALLED - SDK v3');
    try {
      const apiCore = require('./src/api-core');
      const result = await apiCore.getUpdateCronStatus({ homey });
      console.log('‚úÖ getUpdateCronStatus result:', result);
      return result;
    } catch (error) {
      console.error('‚ùå getUpdateCronStatus error:', error);
      return { success: false, error: error.message || 'Unknown error in getUpdateCronStatus' };
    }
  },
  
  async getStartCronJobs({ homey, query }) {
    console.log('üéØ getStartCronJobs CALLED - SDK v3');
    try {
      const apiCore = require('./src/api-core');
      const result = await apiCore.getStartCronJobs({ homey });
      console.log('‚úÖ getStartCronJobs result:', result);
      return result;
    } catch (error) {
      console.error('‚ùå getStartCronJobs error:', error);
      return { success: false, error: error.message || 'Unknown error in getStartCronJobs' };
    }
  },
  
  async getThermalModelData({ homey, query }) {
    console.log('üéØ getThermalModelData CALLED - SDK v3');
    try {
      const apiCore = require('./src/api-core');
      const result = await apiCore.getThermalModelData({ homey });
      console.log('‚úÖ getThermalModelData result:', result);
      return result;
    } catch (error) {
      console.error('‚ùå getThermalModelData error:', error);
      return { success: false, error: error.message || 'Unknown error in getThermalModelData' };
    }
  },
  
  async getCOPData({ homey, query }) {
    console.log('üéØ getCOPData CALLED - SDK v3');
    try {
      const apiCore = require('./src/api-core');
      const result = await apiCore.getCOPData({ homey });
      console.log('‚úÖ getCOPData result:', result);
      return result;
    } catch (error) {
      console.error('‚ùå getCOPData error:', error);
      return { success: false, error: error.message || 'Unknown error in getCOPData' };
    }
  },
  
  async getWeeklyAverageCOP({ homey, query }) {
    console.log('üéØ getWeeklyAverageCOP CALLED - SDK v3');
    try {
      const apiCore = require('./src/api-core');
      const result = await apiCore.getWeeklyAverageCOP({ homey });
      console.log('‚úÖ getWeeklyAverageCOP result:', result);
      return result;
    } catch (error) {
      console.error('‚ùå getWeeklyAverageCOP error:', error);
      return { success: false, error: error.message || 'Unknown error in getWeeklyAverageCOP' };
    }
  },
  
  async updateOptimizerSettings({ homey, query }) {
    console.log('üéØ updateOptimizerSettings CALLED - SDK v3');
    try {
      const apiCore = require('./src/api-core');
      const result = await apiCore.updateOptimizerSettings({ homey });
      console.log('‚úÖ updateOptimizerSettings result:', result);
      return result;
    } catch (error) {
      console.error('‚ùå updateOptimizerSettings error:', error);
      return { success: false, error: error.message || 'Unknown error in updateOptimizerSettings' };
    }
  },
  
  async getMelCloudStatus({ homey, query }) {
    console.log('üéØ getMelCloudStatus CALLED - SDK v3');
    try {
      const apiCore = require('./src/api-core');
      const result = await apiCore.getMelCloudStatus({ homey });
      console.log('‚úÖ getMelCloudStatus result:', result);
      return result;
    } catch (error) {
      console.error('‚ùå getMelCloudStatus error:', error);
      return { success: false, error: error.message || 'Unknown error in getMelCloudStatus' };
    }
  },
  
  async getTibberStatus({ homey, query }) {
    console.log('üéØ getTibberStatus CALLED - SDK v3');
    try {
      const apiCore = require('./src/api-core');
      const result = await apiCore.getTibberStatus({ homey });
      console.log('‚úÖ getTibberStatus result:', result);
      return result;
    } catch (error) {
      console.error('‚ùå getTibberStatus error:', error);
      return { success: false, error: error.message || 'Unknown error in getTibberStatus' };
    }
  },
  
  async runSystemHealthCheck({ homey, query }) {
    console.log('üéØ runSystemHealthCheck CALLED - SDK v3');
    try {
      const apiCore = require('./src/api-core');
      const result = await apiCore.runSystemHealthCheck({ homey });
      console.log('‚úÖ runSystemHealthCheck result:', result);
      return result;
    } catch (error) {
      console.error('‚ùå runSystemHealthCheck error:', error);
      return { success: false, error: error.message || 'Unknown error in runSystemHealthCheck' };
    }
  },
  
  async getMemoryUsage({ homey, query }) {
    console.log('üéØ getMemoryUsage CALLED - SDK v3');
    try {
      const apiCore = require('./src/api-core');
      const result = await apiCore.getMemoryUsage({ homey });
      console.log('‚úÖ getMemoryUsage result:', result);
      return result;
    } catch (error) {
      console.error('‚ùå getMemoryUsage error:', error);
      return { success: false, error: error.message || 'Unknown error in getMemoryUsage' };
    }
  },
  
  async runThermalDataCleanup({ homey, query }) {
    console.log('üéØ runThermalDataCleanup CALLED - SDK v3');
    try {
      const apiCore = require('./src/api-core');
      const result = await apiCore.runThermalDataCleanup({ homey });
      console.log('‚úÖ runThermalDataCleanup result:', result);
      return result;
    } catch (error) {
      console.error('‚ùå runThermalDataCleanup error:', error);
      return { success: false, error: error.message || 'Unknown error in runThermalDataCleanup' };
    }
  }
};